[core]
	editor = $GIT_EDITOR
  whitespace=fix,-indent-with-non-tab,trailing-space,space-before-tab,cr-at-eol
	excludesfile = /Users/jens/.gitignore
	quotepath = false
  # autocrlf = input
[apply]
	whitespace = fix
[user]
	name = jens
	email = jens@lea.io
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[color]
	ui = auto

[color "diff"]
	whitespace = red reverse


[git-tmbundle]
	gitx-path = /usr/local/bin/gitx

## aliases:
[alias]
	s  = status
	st = status
	cl = clone
	ci = commit --no-verify 
	c  = commit
	all= commit -a
	cia = commit --amend
	br = branch
	co = checkout
	df = diff
	pall = push --all
	last = log -1 HEAD
	unstage = reset HEAD --
  changes=diff --name-status -r
  diffstat=diff --stat -r

  # graphviz
  graphviz = "!f() { echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g' ; echo '}'; }; f"

  # SERVE
  serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git

  # LOG
	lg   = log -p
	lol  = log --graph --decorate --pretty=oneline --abbrev-commit
	lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
  lp   = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	ls   = ls-files

	# REMOTES
	up = remote update

	# SVN 
	spull = !git-svn fetch && git-svn rebase
  spush = !git-svn dcommit
	switch = !legit switch \"$@\"
	branches = !legit branches
	sprout = !legit sprout \"$@\"
	unpublish = !legit unpublish \"$@\"
	harvest = !legit harvest \"$@\"
	sync = !legit sync \"$@\"
	publish = !legit publish \"$@\"
	graft = !legit graft \"$@\"
	
[merge]
  tool = opendiff

[github]
	user = "jens-a-e"
  password = !security 2>&1 >/dev/null find-generic-password -gs github.password | ruby -e 'print $1 if STDIN.gets =~ /^password: \\\"(.*)\\\"$/'

[ghi]
  token    = !security 2>&1 >/dev/null find-generic-password -gs ghi.token | ruby -e 'print $1 if STDIN.gets =~ /^password: \\\"(.*)\\\"$/'
[push]
	default = simple
